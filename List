import java.util.ArrayList;
import java.util.List;

//duplicate values can be stored
//It is a factory of the ListIterator interface.
//ArrayList, LinkedList, Stack, and Vector

//Time Complexity
//Adding Element in List Interface -- O(1)
//Remove Element from List Interface --O(N)
//Replace Element in List Interface -- O(N)
//Traversing List Interface -- O(N)
//AbstractList: This class is used to implement an unmodifiable list, for which one needs to only extend this 
//AbstractList Class and implement only the get() and the size() methods.
//CopyOnWriteArrayList: This class implements the list interface. It is an enhanced version of ArrayList 
//in which all the modifications(add, set, remove, etc.) are implemented by making a fresh copy of the list.
//AbstractSequentialList: This class implements the Collection interface and the AbstractCollection class. 
//This class is used to implement an unmodifiable list, for which one needs to only extend this AbstractList Class and implement only the get() and the size() methods.

public class Main {
    public static void main(String[] args) {
        List<String> list = new ArrayList<>();
        list.add("A");
        System.out.println(list);

        //You can add, remove, search, reverse and convert to set
    }
}
